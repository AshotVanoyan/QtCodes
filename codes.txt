Qt codes
Ծրագիր 1. //Qt-ի դատարկ պատուհան

#include <QApplication>
#include <QMainWindow>
int main(int argc, char* argv[]) {
    QApplication app(argc, argv);
    QMainWindow mw;
    mw.setWindowTitle("Hello, Qt");
    mw.resize(400,300);
    mw.show();
    return app.exec();
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Ծրագիր 1.1.
#include <QApplication>
#include <QMainWindow>
int main(int argc, char *argv[]) {

    QApplication app(argc, argv);

    QMainWindow mw;
    mw.setWindowTitle(QString::fromLocal8Bit("Пустое окно Qt4"));
    mw.resize(400, 300);
    mw.show();

    return app.exec();
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Ծրագիր 1.2.
#include <QApplication>
#include <QMainWindow>
#include <QTextCodec>

int main(int argc, char *argv[]) {

    QApplication app(argc, argv);
    QMainWindow mw;
    mw.setWindowTitle("Пустое окно Qt4");
    mw.resize(400, 300);
    mw.show();
    return app.exec();
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Ծրագիր 1.3.
int main(int argc, char *argv[]) {

    QApplication app(argc, argv);
    QMainWindow mw;
    mw.setWindowTitle(QMainWindow::tr("Пустое окно Qt4"));

    mw.resize(400, 300);
    mw.show();

    return app.exec();
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Ծրագիր 1.4.

#include "mainwindow.h"
#include <QApplication>
#include <QtCore>
#include <iostream>
#include <QObject>
#include <QString>

int main(int argc, char *argv[]) {
    QCoreApplication app(argc, argv);

   #ifdef Q_WS_WIN
   #else
   #endif

   QDateTime now = QDateTime::currentDateTime();
   QString s = QObject::tr("Сейчас")
             + now.toString("dd.MM.yyyy  hh:mm:ss.zzz");

return app.exec();

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Ծրագիր2
header{
#ifndef _MYWIN_H_
#define _MYWIN_H_
#include <QtGui>
#include <QMainWindow>
#include <QApplication>

class MyWin : public QMainWindow {
    Q_OBJECT
public:
    MyWin(const QString& title);
} ;
#endif           //_MYWIN_H_
}

cpp{
#include "header.h"
MyWin :: MyWin(const QString& title) : QMainWindow(0) {
    setWindowTitle(title);
    resize(200, 120);
    move(150, 100);
}
}

main{
#include "header.h"
int main(int argc, char* argv[]) {
    QApplication app(argc, argv);
    MyWin win(QObject::tr("Moe okнo"));
    win.show();
    return app.exec();
}
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Ծրագիր 3.
#include <QApplication>
#include <QLabel>
#include <QTextCodec>
int main(int argc, char* argv[])     {
    QApplication app(argc, argv);
    
    QLabel label(QObject::tr("<font size=\"+3\" color=\"#103060\"><center>"
                             "hello<b> Qt </b>! <br/>"
                             " Privet, <b> Qt </b> !"
                             "</center></font>"));
    
    label.resize(200, 100);
    label.setWindowTitle(QObject::tr("label QLabel"));
    label.show();
    return app.exec();
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Ծրագիր 4.
#include <QApplication>
#include <QLabel>
#include <QTextCodec>
int main(int argc, char* argv[])     {
    QApplication app(argc, argv);

    QLabel label(QObject::tr(
                     "emblem Qt:&nbsp;<img src=\"img/qt-logo.png\"/>"));
    label.setAlignment(Qt::AlignCenter);
    label.setFont(QFont("Arial",12));
    label.resize(200, 100);
    label.setWindowTitle(QObject::tr("text with picture"));
    label.show();
    return app.exec();
}


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Ծրագիր 4.1
#include <QLabel>
#include <QTextCodec>
#include <QApplication>

int main( int argc, char *argv[] ) {
    QApplication app(argc, argv);
    QLabel label( QObject::tr(
                      "Address in Internet: "
                      "<a href=\"https://www.google.com/search?q=picture&rlz=1C1CHBF_enAM885AM885&sxsrf=AOaemvK6JNcG6c0TT050yU6fkK8m6dclKA:1636523433022&source=lnms&tbm=isch&sa=X&sqi=2&ved=2ahUKEwi-v5DvjI30AhWCA2MBHWxFBGQQ_AUoAXoECAEQAw&biw=1536&bih=754&dpr=1.25#imgrc=or8MqRcrL-eX2M\">"
                      "pic</a><br/>"
                      "E-mail: <a href=\"mailto:name@server.ru"
                      "?subject=Книга 'Qt4 Cookbook'&body=Здравствуй, Юрий!\">"
                      "name@server.ru</a>" ) );
    label.setOpenExternalLinks(true);
    label.setFrameStyle(QFrame::Panel | QFrame::Sunken);
    label.setAlignment(Qt::AlignCenter);

//     label.setTextInteractionsFlags(Qt::TextEditorInteraction);

    QFont font("Serif", 12, QFont::Bold);
    label.setFont(font);

    label.resize(500, 100);
    label.setWindowTitle(QObject::tr("Надпись со ссылкой"));
    label.show();
    return app.exec();
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Ծրագիր 5
#include <QApplication>
#include <QLabel>
#include <QVBoxLayout>
int main(int argc, char* argv[])     {
    QApplication app(argc, argv);
    QWidget win;
    QVBoxLayout* layout = new QVBoxLayout(&win);
    QLabel* label1 = new QLabel ("One",&win);
    QLabel* label2 = new QLabel ("Two",&win);
    label1->setFrameStyle(QFrame::Panel | QFrame::Sunken);
    label2->setFrameStyle(QFrame::Panel | QFrame::Sunken);
    layout->addWidget(label1);
    layout->addWidget(label2);
    win.setLayout(layout);
    win.show();
    return app.exec();
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Ծրագիր 6

#include <QApplication>
#include <QLabel>
#include <QGridLayout>
int main(int argc, char* argv[])     {
    QApplication app(argc, argv);
    QWidget win;
    QGridLayout* layout = new QGridLayout(&win);
    QLabel* label1 = new QLabel ("One");
    QLabel* label2 = new QLabel ("Two");
    QLabel* label3 = new QLabel ("Three");
    QLabel* label4 = new QLabel ("Four");
//    label2->setFrameStyle(QFrame::Panel | QFrame::Sunken);

    layout->addWidget(label1, 0, 0, Qt::AlignCenter);
    layout->addWidget(label2, 0, 1, Qt::AlignCenter);
    layout->addWidget(label3, 1, 0, Qt::AlignCenter);
    layout->addWidget(label4, 1, 1, Qt::AlignCenter);
    win.setLayout(layout);
    win.show();
    return app.exec();
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Ծրագիր 7

#include <QtGui>
#include <QApplication>
#include <QLineEdit>
int main(int argc, char* argv[]){
    QApplication app(argc, argv);
    QLineEdit  le("");
    le.setAlignment(Qt::AlignCenter);
    le.setFont(QFont("Tahoma",50));
    le.setWindowTitle("QLineEdit");
    le.setEchoMode(QLineEdit::Password);
    le.show();
    return app.exec();
}


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Ծրագիր 7.1.1, 7.1.2, 7.1.3(Լիդիա՞)
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Ծրագիր 7.2.1, 7.2.2, 7.2.3(Լիդիա՞)
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Ծրագիր 8

#include <QApplication>
#include <QPushButton>
int main(int argc, char* argv[])     {
    QApplication app(argc, argv);
    QPushButton button(QString::fromLocal8Bit("&Exit"));
    button.setFont(QFont("Times", 16, QFont::Bold));
    QObject::connect(
                &button,
                SIGNAL(clicked()),
                &app,
                SLOT(quit()));
    button.show();
    return app.exec();
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Ծրագիր 9

#include <QApplication>
# include <QVBoxLayout>
# include <QLabel>
# include <QSpinBox>
# include <QSlider>
int main(int argc, char* argv[])     {
    QApplication app(argc, argv);
    QLabel* label = new QLabel();
    QSpinBox* spinBox = new QSpinBox;
    spinBox->setMinimum(0);
    spinBox->setMaximum(100);
    spinBox->setSingleStep(5);
    QSlider* slider = new QSlider(Qt::Horizontal);
    slider->setRange(spinBox->minimum(), spinBox->maximum());
    slider->setSingleStep(10);
    slider->setTickPosition(QSlider::TicksBelow);
    slider->setTickInterval(10);
    QObject ::connect(spinBox, SIGNAL(valueChanged(int)),
                      label, SLOT(setNum(int)));
    QObject ::connect(spinBox, SIGNAL(valueChanged(int)),
                      slider, SLOT(setValue(int)));
    QObject ::connect(slider, SIGNAL(valueChanged(int)),
                      label, SLOT(setNum(int)));
    QObject ::connect(slider, SIGNAL(valueChanged(int)),
                      spinBox, SLOT(setValue(int)));
    spinBox->setValue(20);
    QWidget window;
    QVBoxLayout* mainLayout = new QVBoxLayout(&window);
    mainLayout->addWidget(label);
    mainLayout->addWidget(spinBox);
    mainLayout->addWidget(slider);
    window.show();
    return app.exec();
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Ծրագիր 12
header{
#ifndef  _PUSHBUTTON_H_
#define  _PUSHBUTTON_H_
#include <QMainWindow>
#include <QtGui>
#include <QVBoxLayout>
#include <QPushButton>
#include <QApplication>
#include <QMessageBox>
#include <QStyleFactory>
#include <QAction>


class MyWin : public QMainWindow {
    Q_OBJECT
public:
    MyWin();
private slots:
    void btnClicked();
    void styleChanged(QAction *action);
};
#endif
}

cpp{
#include "header.h"


MyWin::MyWin() : QMainWindow() {
    setWindowTitle(tr("Кнопки QPushButton"));
    QVBoxLayout *lay = new QVBoxLayout(this);
    lay->setMargin(5);
    lay->setSpacing(4);
    QPushButton *b1 = new QPushButton(tr("Кнопка &1"));
    lay->addWidget(b1, 1, Qt::AlignCenter);
    connect(b1, SIGNAL(clicked()), this, SLOT(btnClicked()) );
    QPushButton *b2 = new QPushButton(tr("Кнопка &2"), this);
    b2->setFlat(true);
    b2->setStyleSheet(
                QString("QPushButton:hover:!pressed {color:%1; "
                        "background-color: rgb(100,200,30); "
                        "border-width: 1px; border-style: solid; "
                        "border-radius: 6px; border-color: white;}")
                .arg(QColor(240,210,170).name()));
    lay->addWidget(b2, 1, Qt::AlignCenter);
    connect(b2, SIGNAL(clicked()), this, SLOT(btnClicked()) );
}


void MyWin::btnClicked() {
    qApp->beep();
    QMessageBox::information(this, tr("Внимание"),tr("Вы нажали кнопку!"),QMessageBox::Ok);}

void MyWin::styleChanged(QAction *action) {
    qApp->setStyle(QStyleFactory::create(action->actionGroup()->checkedAction()->text()));
}
}


main{
#include "header.h"
int main(int argc, char *argv[]) {
    QApplication app(argc, argv);
    MyWin wn;    wn.show();
    return app.exec();
}

}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Ծրագիր 13
header{
#include <QtGui>
#include <QMainWindow>
#include <QAction>
#include <QtGui>
#include <QVBoxLayout>
#include <QPushButton>
#include <QStyleFactory>
#include <QMenu>
#include <QApplication>
#include <QMessageBox>


class MyWin : public QMainWindow {
    Q_OBJECT
public:
    MyWin();
private slots:
    void btnClicked();
    void styleChanged(QAction *action);
};
}

cpp{
#include "header.h"


MyWin::MyWin(): QMainWindow() {
    setWindowTitle(tr("Кнопки QPushButton"));
    QWidget *cw = new QWidget(this);
    QVBoxLayout *lay = new QVBoxLayout(this);
    lay->setMargin(5);  lay->setSpacing(4);
    QPushButton *b3 = new QPushButton(
                // style()->standardIcon(QStyle::SP_FileDialogBack),
                QIcon(":/img/exit.png"), tr("В&ыход"), this);
    lay->addWidget(b3, 1, Qt::AlignCenter);
    connect(b3, SIGNAL(clicked()),  this, SLOT(close()) );
    QActionGroup *ag = new QActionGroup(this);
    ag->setExclusive(true);
    QStringList styles = QStyleFactory::keys();
    foreach ( QString s, styles ) {
        QAction *a = ag->addAction(s);
        a->setCheckable(true);
    }
    connect(ag, SIGNAL(triggered(QAction*)), this, SLOT(styleChanged(QAction*)) );
    QMenu *menu = new QMenu(tr("Меню"), this);
    menu->addActions(ag->actions());
    QPushButton *b4 = new QPushButton(tr("&Стиль"), this);
    b4->setStyleSheet(
                QString("QPushButton:hover:!pressed{color:%1;}")
                .arg(QColor(240,20,10).name()));
    b4->setMenu(menu);
    lay->addWidget(b4, 1, Qt::AlignCenter);
    cw->setLayout(lay);
    setCentralWidget(cw);
}

void MyWin::btnClicked() {
    qApp->beep();
    QMessageBox::information(this, tr("Внимание"),tr("Вы нажали кнопку!"),QMessageBox::Ok);
}

void MyWin::styleChanged(QAction *action) {
    qApp->setStyle(QStyleFactory::create(action->actionGroup()->checkedAction()->text()));
}
}


main{
#include "header.h"

int main(int argc, char *argv[]) {
    QApplication app(argc, argv);
    MyWin wn;
    wn.show();
    return app.exec();
}
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Ծրագիր 14

header{
#ifndef  _CHECK_H_
#define _CHECK_H_
#include <QtGui>
#include <QDialog>
#include <QPushButton>
#include <QCheckBox>
#include <QRadioButton>
#include <QApplication>
#include <QGridLayout>

class MyDialog : public QDialog {
    Q_OBJECT
public:
    MyDialog();
    QPushButton  *m_btn1,  *m_btn2;
    QCheckBox    *m_chb;
    QRadioButton *m_rb1, *m_rb2;
public slots:
    void onClick();
};
#endif
}

cpp{
#include "header.h"
MyDialog::MyDialog()  : QDialog() {
    QGridLayout *layout = new QGridLayout(this);

    m_btn1 = new QPushButton(tr("&Нажми меня"), this);
    connect(m_btn1, SIGNAL(clicked()), this, SLOT(onClick()));
    layout->addWidget(m_btn1, 0, 0);

    m_btn2 = new QPushButton(tr("Я нажмусь сама"), this);
    layout->addWidget(m_btn2, 0, 1);

    m_chb = new QCheckBox(tr("Пометка"), this);
    m_chb->setCheckState(Qt::Unchecked);
    layout->addWidget(m_chb, 1, 1);

    m_rb1 = new QRadioButton(tr("&Первый"), this);
    layout->addWidget(m_rb1, 2, 0);

    m_rb2 = new QRadioButton(tr("&Второй"), this);
    m_rb2->setChecked(true);
    layout->addWidget(m_rb2, 2, 1);
    setLayout(layout);
}

void MyDialog::onClick() {
    m_btn2->animateClick(200);
    m_chb->animateClick(300);
    if (!m_chb->isChecked())
        m_rb1->animateClick(400);
    else
        m_rb2->animateClick(400);
}

}

main{
#include "header.h"
#include <QApplication>

int main(int argc, char *argv[]) {
    QApplication app(argc, argv);
    MyDialog dlg;
    dlg.show();
    return app.exec();
}

}
